Experiment: Pack core classes into an archive
========================================================================
$Id$

Abstract
--------
This experiment tries to find out whether packing core classes into an
archive instead of loading them by means of uses() will result in a
performance improvement.
Core classes are classes that are loaded by lang.base.php.

List of core classes
--------------------
- lang.Object
- lang.Throwable
- lang.StackTraceElement
- lang.Error
- lang.Exception
- lang.Interface
- lang.XPClass
- lang.reflect.Routine
- lang.reflect.Argument
- lang.reflect.Method
- lang.reflect.Field
- lang.reflect.Constructor
- lang.NullPointerException
- lang.IllegalAccessException
- lang.IllegalArgumentException
- lang.IllegalStateException
- lang.FormatException
- lang.ClassLoader
- lang.ClassNotFoundException

How to use this experiment
--------------------------
* Use lang.base.php with core archive
  $ php startup.php .

* Use existing lang.base.php
  $ php startup.php ../../../../skeleton/

Note: It is expected that the working directory is the directory this file
resides in.

Results
-------
Loading the core classes from an archive is about twice as fast as the 
current way.

Setup #1
~~~~~~~~
* Environment
  Windows XP, PHP 4.3.11 running on CygWin, PIII-650, 384 MB RAM

* Average startup time w/ archive:
  25 milliseconds 

* Average startup w/o archive:
  49 milliseconds
  
Setup #2
~~~~~~~~
* Environment
  FreeBSD 5.1-RELEASE, PHP 4.3.11, AMD Athlon XP 2200+, 512 MB RAM

* Average startup time w/ archive:
  8 milliseconds 

* Average startup w/o archive:
  12 milliseconds

Notes
-----
- Stacktraces resulting from exceptions thrown in the core will include
  the file __core__.php instead of the "real" filename of the class, 
  e.g. [...]/lang/reflect/Method.class.php.
  
  Compare the outputs of the following commands to see the difference:
  $ php except.php .
  $ php except.php ../../../../skeleton/

<EOF>
