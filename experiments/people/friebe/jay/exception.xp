class Exception {
  protected $msg;
  
  public __construct($msg) {
    $this->msg= $msg;
  }
  
  public string toString() {
    return 'Exception '.$this->msg;
  }
}

class IllegalException {
  protected $msg;
  
  public __construct($msg) {
    $this->msg= $msg;
  }
  
  public string toString() {
    return 'Exception '.$this->msg;
  }
}

try {
  try {
    echo "Before exception.\n";
    throw new Exception("Foo");
    echo "May not be reached.\n";
  } catch (Exception $e) {
    echo "Caught first Exception.\n";
    throw(new IllegalException("Thrown in catch."));
    echo $e->toString(), "\n";
  } catch (IllegalException $e) {
    echo "May not be called.\n";
    echo $e->toString(), "\n";
  } finally {
    echo "Finally executed in inner try/catch.\n";
  }
} catch(IllegalException $e) {
  echo "Ok, caught exception generated in catch.\n";
  echo $e->toString();
} finally {
  echo "Finally executed in outer try/catch\n";
}
