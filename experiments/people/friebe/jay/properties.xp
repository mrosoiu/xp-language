class String {
  protected 
    $_buf= '',
    $_len= 0;

  public 
    property $buffer get $_buf set setBuffer(),
    property $chars get getChars() set setChars(),
    property $length get $_len set void;

  public void setBuffer($b) {
    $this->_buf= $b;
    $this->_len= strlen($b);
    echo '>>> setBuffer() called {_buf= "'.$this->_buf.'", _len= '.$this->_len."}\n";
  }

  public void setChars($chars) {
    $this->_buf= implode('', $chars);
    $this->_len= strlen($b);
    echo '>>> setChars() called {_buf= "'.$this->_buf.'", _len= '.$this->_len."}\n";
  }

  public string[] getChars() {
    $r= array();
    for ($i= 0; $i < $this->_len; $i++) {
      $r[]= $this->_buf[$i];
    }
    return $r;
  }
}

$s= new String();
$s->buffer= 'Hello';            // calls setBuffer() with 'Hello' as argument    
echo '"'.$s->buffer.'"';        // reads member "_buf"
echo ' ('.$s->length.')';       // reads member "_len"
foreach ($s->chars as $char) {  // iterate on chars property
  var_dump($char);
}

try {
  $s->length++;
} catch (xp~lang~IllegalAccessException $e) {
  // Expected
  echo ', caught expected ', $e->getClassName();
}
