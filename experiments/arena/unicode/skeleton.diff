Index: rdbms/mysql/MySQLConnection.class.php
===================================================================
--- rdbms/mysql/MySQLConnection.class.php	(revision 9905)
+++ rdbms/mysql/MySQLConnection.class.php	(working copy)
@@ -81,6 +81,9 @@
       if (!is_resource($this->handle)) {
         throw(new SQLConnectException(mysql_error(), $this->dsn));
       }
+      
+      // Set client character set to UTF-8
+      mysql_query('set character set utf8', $this->handle);
 
       // Figure out sql_mode and update formatter's escaperules accordingly
       // - See: http://bugs.mysql.com/bug.php?id=10214
Index: util/cmd/Console.class.php
===================================================================
--- util/cmd/Console.class.php	(revision 9905)
+++ util/cmd/Console.class.php	(working copy)
@@ -18,7 +18,16 @@
    * @purpose  I/O functions
    */
   class Console extends Object {
-
+    protected static 
+      $charset;
+      
+    static function __static() {
+    
+      // Detect output charset, appending //IGNORE so that malformed
+      // characters won't break output completely
+      self::$charset= iconv_get_encoding('output_encoding').'//IGNORE';
+    }
+    
     /**
      * Flush output buffer
      *
@@ -34,7 +43,7 @@
      */
     public static function write() {
       $a= func_get_args();
-      fwrite(STDOUT, implode('', $a));
+      fwrite(STDOUT, iconv('UTF-8', self::$charset, implode('', $a)));
     }
     
     /**
@@ -44,7 +53,7 @@
      */
     public static function writeLine() {
       $a= func_get_args();
-      fwrite(STDOUT, implode('', $a)."\n");
+      fwrite(STDOUT, iconv('UTF-8', self::$charset, implode('', $a))."\n");
     }
     
     /**
@@ -56,7 +65,7 @@
      */
     public static function writef() {
       $a= func_get_args();
-      fwrite(STDOUT, vsprintf(array_shift($a), $a));
+      fwrite(STDOUT, iconv('UTF-8', self::$charset, vsprintf(array_shift($a), $a)));
     }
 
     /**
@@ -67,7 +76,7 @@
      */
     public static function writeLinef() {
       $a= func_get_args();
-      fwrite(STDOUT, vsprintf(array_shift($a), $a)."\n");
+      fwrite(STDOUT, iconv('UTF-8', self::$charset, vsprintf(array_shift($a), $a))."\n");
     }
     
     /**
