Syntax enhancements for PHP5: README
========================================================================
$Id$

Array sntax
-----------
Arrays may be enclosed by [ and ] in addition to the current array 
syntax, array().

Examples:
<pre>
  Old                            New
  ------------------------------ ------------------------------
  $n= array();                   $n= [ ];
  $a= array(1, 2, 3);            $a= [ 1, 2, 3 ];
  $b= array('color' => 'green'); $b= [ 'color' => 'green' ];
</pre>

The new notation may be used in any place array() can be used.

Annotations
-----------
Metadata may be associated with methods in the following way:

<pre>
  class RmiClient {
    @remote public function invoke() {
      // ...
    }
    @remote,@deprecated('Use invoke() instead') public function call() {
      return $this->invoke();
    }
  }
</pre>

The reflection API offers the following ways to retrieve these
annotations:

- array ReflectionMethod::getAnnotations()
  Returns an associative array of annotation names and their 
  values.
  
  Example (for the above class' method "call"):
</pre>
  array(2) {
    ["deprecated"]=>
    string(22) "Use invoke() instead"
    ["remote"]=>
    NULL
  }
</pre>

- mixed ReflectionMethod::getAnnotation($name)
  Returns the annotation's value specified by name. Throws a 
  ReflectionException in case the annotation is not found
  
- bool ReflectionMethod::hasAnnotation($name)
  Allows you to check if a annotation exists
  
Instance creation expression
----------------------------
A class instance creation expression is used to create new objects that 
are instances of classes.

<pre>
  $list->sort(new Comparator() {
    public function compare($a, $b) {
      return strnatcmp($a, $b);
    }
  });
</pre>

If the name specified after the keyword "new" refers to a class, the 
class being instantiated will extend this class. In case it refers to
an interface, the specified interface will be implemented by the 
class being instantiated.

<EOF>
