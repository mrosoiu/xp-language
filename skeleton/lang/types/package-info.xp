<?php
/* This file is part of the XP framework
 *
 * $Id$
 */

/**
 * The types package contains type wrappers for types that exist in other
 * programming languages. These wrappers are simple value objects that are
 * used to tell apart an integer from a long in cases where the XP 
 * framework (which does not distinguish between the both) interacts with 
 * other programming languages which do.
 *
 * Numbers
 * =======
 * The following numeric types are supported:
 * <ul>
 *   <li>Byte</li>
 *   <li>Float</li>
 *   <li>Long</li>
 *   <li>Short</li>
 *   <li>Integer</li>
 * </ul>
 * ...and map to whatever the "remote" type is defined as. They all take
 * strings as arguments to preserve the value exactly. The respective 
 * classes extend from the base class lang.reflect.Number.
 *
 * ArrayList
 * =========
 * This class represents a zero-indexed list of elements of any type.
 * It is used to give marshalling utilities an easy way to see whether
 * an array is "numeric" or not (PHP's array types can be either numeric,
 * hashes or a mix of both and aren't necessarily zero-indexed).
 *
 * @see      http://xp-framework.info/xml/xp.en_US/news/view?52
 * @see      http://xp-framework.info/xml/xp.en_US/news/view?54
 * @see      http://xp-framework.net/rfc/0038
 * @see      xp://lang.types.Number
 * @see      xp://lang.types.ArrayList
 * @purpose  Type wrappers
 */
package lang.types {
}
