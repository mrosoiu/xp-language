;;
; Core tests
;
; $Id$

[this]
description="Core tests"

[annotations]
class="net.xp_framework.unittest.core.AnnotationTest"

[collection]
class="net.xp_framework.unittest.core.CollectionTest"

[errors]
class="net.xp_framework.unittest.core.ErrorsTest"

[xp-null]
class="net.xp_framework.unittest.core.NullTest"

[object]
class="net.xp_framework.unittest.core.ObjectTest"

[references]
class="net.xp_framework.unittest.core.ReferencesTest"

[stringof]
class="net.xp_framework.unittest.core.StringOfTest"

[create]
class="net.xp_framework.unittest.core.CreateTest"

[classdetails]
class="net.xp_framework.unittest.reflection.ClassDetailsTest"

[classloader]
class="net.xp_framework.unittest.reflection.ClassLoaderTest"

[fqcns]
class="net.xp_framework.unittest.reflection.FullyQualifiedTest"

[resources]
class="net.xp_framework.unittest.reflection.ResourcesTest"

[packages]
class="net.xp_framework.unittest.reflection.PackageTest"

[runtimecl]
class="net.xp_framework.unittest.reflection.RuntimeClassDefinitionTest"

[proxy]
class="net.xp_framework.unittest.reflection.ProxyTest"

[reflection]
class="net.xp_framework.unittest.reflection.ReflectionTest"

[destructor]
class="net.xp_framework.unittest.core.DestructorTest"

[cloning]
class="net.xp_framework.unittest.core.CloningTest"

[is]
class="net.xp_framework.unittest.core.IsTest"

[exceptions]
class="net.xp_framework.unittest.core.ExceptionsTest"

[ref]
class="net.xp_framework.unittest.core.RefTest"

[modifiers]
class="net.xp_framework.unittest.reflection.ModifiersTest"

[arguments]
class="net.xp_framework.unittest.reflection.ArgumentTest"

[typehints]
class="net.xp_framework.unittest.core.TypeHintsTest"

[enum]
class="net.xp_framework.unittest.core.EnumTest"

[chained_exception]
class="net.xp_framework.unittest.core.ChainedExceptionTest"
