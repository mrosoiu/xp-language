Inside an RFC
=============
This document describes what an RFC looks like. First of all, every RFC 
has an RFC number following the scheme <tt>#XXXX</tt>. This number has
no special meaning except for uniquely identifying the RFC. Also, an RFC
always has a title.

Attributes
----------
An RFC has several attributes:

<summary>
Author
~~~~~~
The main author (usually the initiator) of this RFC.
</summary>

<summary>
Contributors
~~~~~~~~~~~~
Co-authors: Other people also working on this RFC.
</summary>

<summary>
Created
~~~~~~~
When this RFC was created.
</summary>

<summary>
Status
~~~~~~
Status. Initially always *draft*. Possible other values: discussion,
accepted, implemented, obsoleted and rejected. See the [topic://process process]
topic for more information.
</summary>

<summary>
Category
~~~~~~~~
The category. If it affects anything in lang.base.php, use the string
<tt><core></tt>. For anything else, use the package name (e.g. <tt>rdbms</tt> or
<tt>util.collections</tt>).
</summary>


Contents
--------
Its content is divided into the following sections:

<summary>
Scope of change
~~~~~~~~~~~~~~~
Describe briefly what will change.
</summary>

<summary>
Rationale
~~~~~~~~~
Describe briefly why this change is needed.
</summary>

<summary>
Functionality
~~~~~~~~~~~~~
Describe how your new functionality will work. Sourcecode examples are most
welcome.
</summary>

<summary>
Security considerations
~~~~~~~~~~~~~~~~~~~~~~~
If there are any security issues, put them here.
</summary>

<summary>
Speed impact
~~~~~~~~~~~~
If the implementation of this RFC introduces a performance penalty, put it
here.
</summary>

<summary>
Dependencies
~~~~~~~~~~~~
If this RFC depends on one of the following:

* PHP Version 
* Zend Engine Version
* Other RFCs
..., then write them down into this section
</summary>

<summary>
Related documents
~~~~~~~~~~~~~~~~~
Put links to any of the following documents here:

* Patches implementing the RFC. Patches should be put into the contrib
  directory so they are in version control and changes to them are visible
  to commit log readers.
* Related information, e.g. links to external websites, XP blog entries,
  other RFCs
</summary>

Example
-------
This is the file <tt>0149.rfc.txt</tt> from the XP SVN checkout:
<pre>
RFC 0149: Code coverage
========================================================================
$Id: 0149.rfc.txt 11574 2007-12-23 15:42:28Z friebe $

@authors: friebe
@created: Sun Dec 23 16:37:38     2007
@status: draft
@category: unittest

Scope of Change
---------------
Code coverage functionality will be added to the unittest API.

Rationale
---------
Find unused and/or untested code paths.

Functionality
-------------
Code coverage functionality will depend on the XDebug extension which
can be retrieved from http://xdebug.org/

Security considerations
-----------------------
n/a

Speed impact
------------
Unittests will run slower if this optional functionality is used.

Dependencies
------------
XDebug extension

Related documents
-----------------
- http://xp-framework.net/rfc/contrib/rfc0149.diff
  Implementing patch

Comments
--------
- friebe, Thu May  1 12:10:21     2008
  This should go into the next release - 5.6.7
</pre>
