<?xml version="1.0" encoding="iso-8859-1"?>
<document title="XP::Home">
  <main>
    <introduction>
      XP is a modular framework consisting of a number of useful classes,
      making it easier to complete everyday tasks.
      <br/>
      
      The classes are written to serve your needs in any situation:
      <ul>
        <li>Command-line tools and cronjobs</li>
        <li>GUI applications with the power of GTK-PHP</li>
        <li>Web sites using HTML or XML/XSL</li>
        <li>SOAP clients/servers</li>
        <li>Cron jobs</li>
        <li>Daemons (TCP/IP client/server architecture)</li>
      </ul>
      
      XP brings you nearer to the future of PHP: All of the framework will
      be migrated to PHP5 and the Zend Engine 2 as soon as these are
      available and stable. <a href="/content/tasks.html"><b>Learn more...</b></a>
      
      <br/><br/>
      <b>I want to use the XP framework. What do I have to do?</b><br/><br/>
      Grab yourself any of the releases at <a href="http://xp-framework.net/resources">http://xp-framework.net/resources</a>
      or check out a copy of the SVN repo using anonymous SVN (instructions at the same URL).<br/><br/>
      Follow the <a href="/content/about.install.html">installation instruction</a>, have
      a look at the <a href="/content/examples.html">examples section</a> and you're ready to go!
    </introduction>
    
    <links>
     <link href="http://www.jera.com/techinfo/xpfaq.html">
       <caption>Extreme Programming</caption>
       <description>
         <quote>
           Extreme Programming (or XP) is a set of values, principles and practices
           for rapidly developing high-quality software that provides the highest
           value for the customer in the fastest way possible. XP is extreme in the
           sense that it takes 12 well-known software development "best practices"
           to their logical extremes -- turning them all up to "10" (or "11" for
           Spinal Tap fans). See Kent Beck's introduction to Extreme Programming
           Explained for more details.
        </quote>
        </description>
      </link>
      <link href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnaspp/html/phpvsaspnet.asp">
        <caption>Head-to-Head: PHP vs. ASP.NET</caption>
        <description>
          A comparison of PHP4 to the ASP.NET framework. Although it is definitely true
          that some features concerning object orientation are not present in PHP4, the
          complaints about a missing class library, consistent naming patterns and the
          missing database abstraction layer are answered here!<br/><br/>
          Take the following section:<br/>
          <quote>
            Unlike PHP, ASP.NET does not have a set of built-in functions. Instead, ASP.NET 
            is built on top of the Microsoft .NET Framework. Inside the framework is the 
            Microsoft .NET Class Library, which contains an enormous number of classes 
            organized hierarchically into namespaces. Each namespace contains all the classes 
            necessary to achieve a certain goal, such as working XML, Web controls or data. 
            Each class contains a specific set of properties and methods, all aligned with 
            the purpose of the class. In most cases, in order to use these properties and 
            methods, you must create an instance of the class (object), and then its 
            properties and methods are available.<br/>
            The interfaces of the above set of classes and namespaces are publicly available, 
            and viewable through the use of the Microsoft .NET Class Browser sample application 
            provided with ASP.NET. You can navigate the set of namespaces and look at all 
            the properties, methods and constructors for each class. In addition, well-written 
            documentation for each namespace is included with ASP.NET. Since functionality is 
            organized by namespace, you can locate information quickly.<br/>
            Since ASP.NET's class library is a compiled set of namespaces, it offers a great 
            deal more functionality than a flat set of functions.     
          </quote>
          <br/>
          Now substitute ASP.NET with XP and class browser with http://xp-framework.net/apidoc/.
          <i>Does it sound familiar?</i>
        </description>
      </link>
      <link href="http://mindview.net/WebLog/log-0025">
        <caption>Strong Typing vs. Strong Testing</caption>
        <description>
          Bruce Eckel, Author of "Thinking in Java", on static vs. dynamic typing. 
          Altough he is using Python in his article, the arguments made could be 
          adapted to PHP, too.<br/>
          <quote>
            This became a puzzle to me: if strong static type checking is so 
            important, why are people able to build big, complex Python programs 
            (with much shorter time and effort than the strong static 
            counterparts) without the disaster that I was so sure would ensue?
          </quote>
        </description>
      </link>
      <link href="http://www.artima.com/weblogs/viewpost.jsp?thread=4639">
        <caption>Are Dynamic Languages Going to Replace Static Languages?</caption>
        <description>
          <quote>
            For many years we've been using statically typed languages for 
            the safety they offer. But now, as we all gradually adopt Test 
            Driven Development, are we going to find that safety redundant? 
            Will we therefore decide that the flexibility of dynamically 
            typed languages is desirable?
          </quote>
          <br/>
          By Robert C. Martin
        </description>
      </link>
    </links>
    <news/>
  </main>
</document>
