RFC 0014: Dynamic exception loading
========================================================================
$Id$

@authors: friebe
@created: Tue Jan 25 07:30:00 CET 2005
@status: implemented (Tue Jan 25 20:50:41 CET 2005)
@category: <core>

Scope of Change
---------------
A new core function raise() will be introduced.

Rationale
---------
Loading all exceptions statically (by means of uses()) can impose 
performance penalties.

Functionality
-------------

Prototype:
<pre>
  xp.null raise(string classname, string message) throws Throwable;
</pre>

Example:
<code>
  try(); {
    raise('lang.ClassCastException', 'An error occured');
  } if (catch('ClassCastException', $e)) {
    $e->printStackTrace();
  }
</code>

Implementation:
<code>
  function raise($classname, $message) {
    try(); {
      $class= &XPClass::forName($classname);
    } if (catch('ClassNotFoundException', $e)) {
      xp::error($e->getMessage());
      // Bails out
    }
    
    return throw($class->newInstance($message));
  }
</code>

Dependencies
------------
None.

Related documents
-----------------
- Pascal raise statement
  http://www.freepascal.org/docs-html/ref/refse65.html#x150-15700013.1
  
Comments
--------
- friebe, Tue Jan 25 07:32:23 CET 2005
  Will this work in PHP5?

- friebe, Tue Jan 25 07:35:52 CET 2005
  Should we be able to pass varargs after the classname?

<EOF>
