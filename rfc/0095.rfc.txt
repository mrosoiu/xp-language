RFC 0095: Member utilities
========================================================================
$Id$

@authors: friebe
@created: Sun Dec 17 18:14:43     2006
@status: discussion, ends Mon Aug 27 18:00:00     2007
@category: lang, lang.reflect, lang.types, util.invoke

Scope of Change
---------------
A new API will be created to easily work with members.


Rationale
---------
Remove boilerplate code.


Functionality
-------------

Current
~~~~~~~
XPClass::getMethod() returns an array of lang.reflect.Method objects. To
select only those decorated with an @inject annotation, the standard loop
and filter approach is used:

<?php
  foreach (XPClass::forName('some.annotated.Class')->getMethods() as $m) {
    if (!$m->hasAnnotation('inject')) continue;
    
    $value= $m->getAnnotation('inject');
    // ...
  }
?>

New
~~~
XPClass::getMethod() returns a lang.types.ArrayList containing all the
lang.reflect.Method objects. The ArrayList class provides a filter method
to which we pass a filter created by the util.invoke.Members class.
<?php
  foreach (XPClass::forName('some.annotated.Class')->getMethods()->filter(
    Members::decoratedWith('inject')
  ) as $m) {
    $value= $m->getAnnotation('inject');
    // ...
  }
?>


Security considerations
-----------------------
n/a


Speed impact
------------
n/a


Dependencies
------------
- RFC #0109 - for the util.invoke package


Related documents
-----------------
n/a


Comments
--------

<EOF>
