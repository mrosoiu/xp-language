RFC 0164: Exceptions for XPClass::get*()
========================================================================
$Id$

@authors: friebe
@created: Sat Apr 26 12:44:23     2008
@status: discussion, ends Fri Jul 18 15:00:00     2008
@category: lang

Scope of Change
---------------
The following methods in lang.XPClass will throw exceptions instead of
returning NULL for the case the respective element is not found:
* getConstructor()
* getMethod(string name)
* getField(string name)


Rationale
---------
Allow for chaining, be consistent with other APIs (if a hasX method exists,
the getX method will throw an exception) and the getAnnotation() method.


Functionality
-------------
The following can be written in a more concise way:

<code>
  $m= XPClass::forName('util.cmd.Runner')->getMethod('main');
  if (!$m) throw new ElementNotFoundException('No "main" method');
  $m->invoke(NULL, array($args));
</code>

New:
<code>
  XPClass::forName('util.cmd.Runner')->getMethod('main')->invoke(NULL, array($args));
</code>


BC break
~~~~~~~~
The following will no longer work:
<code>
  if (!($m= $class->getMethod($name))) {
    // The method does not exist
  }
</code>

...and must be rewritten to use hasMethod():
<code>
  if (!$class->hasMethod($name)) {
    // The method does not exist
  }
  $m= $class->getMethod($name);
</code>

If the first version is run, the block below the getMethod() call will never
be reached (as it will throw an exception).


Security considerations
-----------------------
n/a


Speed impact
------------
None.


Dependencies
------------
- BC break - increases minor version (at the time of writing, that would
  mean the next release would be 5.7.0)


Related documents
-----------------
- http://xp-framework.net/rfc/contrib/rfc0164.diff
  Implementing patch


Comments
--------

<EOF>
