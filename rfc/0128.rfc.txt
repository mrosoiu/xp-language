RFC 0128: webservices.xmlrpc handling of NULL
========================================================================
$Id$

@authors: gellweiler
@created: Wed May 16 15:36:16 CEST 2007
@status: implemented, Mo May 21 14:48:00 2007
@category: webservices.xmlrpc

Scope of Change
---------------
The XmlRpcDecoder and XmlRpcEncoder classes will provide functionality
to handle NULL values.


Rationale
---------
- Prevent thrown exceptions when trying to encode/decode NULL.


Functionality
-------------
In cases where the encoder/decoder gets a value containing NULL an
exception is thrown. Although the xml-rpc specification does not cover
handling of NULL, there is an extension[1] solving this problem.
According to this extension NULL will be encoded as <nil/>.


Example structure
~~~~~~~~~~~~~~~~~~
<struct>
  <member>
    <name>lowerBound</name>
    <value><int>18</int></value>
  </member>
  <member>
    <name>upperBound</name>
    <value><nil/></value>
  </member>
</struct>

Changes in webservices.xmlrpc.XmlRpcDecoder
~~~~~~~~~~~~~~~~~
<code>
  switch ($node->children[0]->getName()) {
    [...]
    case 'nil':
      $n= NULL;
      return $n;
    [...]
  }
</code> 

Changes in webservices.xmlrpc.XmlRpcEncoder
~~~~~~~~~~~~~~~~~
 <code>
  switch (xp::typeOf($data)) {
    [...]
    case 'NULL':
      $value->addChild(new Node('nil'));
      break;
    [...]
  }
</code> 


Security considerations
-----------------------
n/a


Speed impact
------------
n/a


Dependencies
------------
n/a


Related documents
-----------------
- http://ontosys.com/xml-rpc/extensions.php 
  [1] XML-RPC nil extension


Comments
--------
  
<EOF>
