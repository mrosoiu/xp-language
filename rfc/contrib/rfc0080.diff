Index: lang.base.php
===================================================================
--- lang.base.php	(revision 8140)
+++ lang.base.php	(working copy)
@@ -504,6 +504,42 @@
   }
   // }}}
 
+  // {{{ proto &lang.Object newinstance(string classname, mixed[] args, string bytes)
+  //     Anonymous instance creation
+  function &newinstance($classname, $args, $bytes) {
+    static $i= 0;
+
+    $class= xp::reflect($classname);
+    if (!class_exists($class)) {
+      xp::error(xp::stringOf(new Error('Class "'.$classname.'" does not exist')));
+      // Bails
+    }
+
+    $name= $class.'·'.++$i;
+    xp::registry('class.'.$name, $name);
+    
+    // Build paramstr for evaluation
+    for ($paramstr= '', $i= 0, $m= sizeof($args); $i < $m; $i++) {
+      $paramstr.= ', $args['.$i.']';
+    }
+
+    // Checks whether an interface or a class was given
+    $c= $class;
+    while ($c= get_parent_class($c)) {
+      if ('interface' != $c) continue;
+      
+      // It's an interface
+      eval('class '.$name.' extends Object '.$bytes.' $instance= &new '.$name.'('.substr($paramstr, 2).');');
+      implements($name.'.class.php', $class);
+      return $instance;
+    }
+    
+    // It's a class
+    eval('class '.$name.' extends '.$class.' '.$bytes.' $instance= &new '.$name.'('.substr($paramstr, 2).');');
+    return $instance;
+  }
+  // }}}
+
   // {{{ initialization
   error_reporting(E_ALL);
   
