RFC 0166: XP Runners
========================================================================
$Id$

@authors: friebe
@created: Mon May 12 16:54:34     2008
@status: draft
@category: <technologies>

Scope of Change
---------------
This RFC defines the standards for the XP runners.


Rationale
---------
Clarification is needed.


Functionality
-------------
XP runners make it easy to run XP classes.

Hello World-Example
~~~~~~~~~~~~~~~~~~~
Hello.class.php:
<code>
  uses('util.cmd.Console');
  
  class Hello extends Object {
  
    public static function main(array $args) {
      Console::writeLine('Hello ', $args[1]);
    }
  }
</code>

To run this code with php, we would have to type:
<pre>
  $ php
  > -dinclude_path="/path/to/xp:/path/to/xp/xp-rt-X.X.X.xar:."
  > -dauto_prepend_file="lang.base.php"
  > -r "uses('Hello'); Hello::main($argv);"
  > World
</pre>

If we use the XP runner, we simply type:
<pre>
  $ xp Hello World
</pre>

Released versions
~~~~~~~~~~~~~~~~~
Every release comes bundled with the runners:

<pre>
  + xp-VERSION/
    +- lang.base.php
    +- lib/
    |  +- xp-rt-VERSION.xar
    |  +- ... (further xar files)
    +- bin/
       +- xp
       +- xpcli
       +- ... (further utilities)
</pre>

The runners all use <tt>../lang.base.php</tt> and <tt>../lib/xp-rt-VERSION.xar</tt> 
to ensure no global <tt>include_path</tt> setting will "disturb" the class loading 
process. Assume you have installed the XP framework to <tt>/usr/local/lib</tt>. 
By adding <tt>/usr/local/lib/xp-VERSION/bin</tt> to your <tt>PATH</tt>, you can 
type "xp" in any shell to invoke the xp utility. To add XAR files to the class 
path temporarily, you can use the "-cp" option, e.g. <tt>xp -cp "/path/to/thekid.xar" 
de.thekid.Hello</tt>. To add XAR files or paths permanently so they don't have to be 
passed via command line all the time, XXX!


Development checkout
~~~~~~~~~~~~~~~~~~~~
For a development checkout (needed for developing the XP framework itself), the 
directory tree looks as follows:

<pre>
  + trunk/
    +- skeleton/
    |  +- lang.base.php
    |  +- lang/
    |  |  +- Object.class.php
    |  |  +- ... (lang package contents)
    |  +- ... (packages)
    +- ports/
       +- classes/
       |  +- net/
       |  +- ... (further non-core classes)
       +- technologies/
          +- env/
             +- bin/
                +- xp
                +- xpcli
                +- ... (further utilities)
</pre>
XXX TODO: Would they use ../../../skeleton/ as <tt>include_path</tt>? XXX

Core utility: xp
~~~~~~~~~~~~~~~~
Basic runner
<pre>
  # Display version
  $ xp [opt] -v

  # Evaluate
  $ xp [opt] -e 'echo create(new Object())->hashCode();'
  
  # Run main class from xar file (via META-INF/manifest.ini)
  $ xp [opt] -xar [app.xar]
  
  # Run class
  $ xp [opt] class.with.static.main.Method
  
  opt is one of:
  * -cp [path-list] - Set classpath
</pre>


Core utility: xpcli
~~~~~~~~~~~~~~~~~~~
The xp command class runner. An alias for <tt>xp util.cmd.Runner</tt>.
<pre>
  # Runs class by fully qualified name
  $ xpcli class.which.extends.util.cmd.Command
  
  # Runs class by filename
  $ xpcli class/which/extends/util/cmd/Command.class.php
</pre>


Core utility: xar
~~~~~~~~~~~~~~~~~
Works with XAR archives. An alias for <tt>xp net.xp_framework.xar.Xar</tt>.
<pre>
  $ xar [instruction] target.xar [file-or-directory*]
  
  instruction is one of:
  * c[v]f - Create
  * x[v]f - Extract
  * t[v]f - List
  * s[v]f - Show
  
  file-or-directory is one of:
  * a directory - all files and directories in the directory will be added
  * a file - the file will be added
</pre>


Development utility: n
~~~~~~~~~~~~~~~~~~~~~~
Starts editor.
<pre>
  $ n [class-or-file*]
  
  class-or-file is one of:
  * fully.qualified.class.Name
  * fully/qualified/class/Name.class.php
</pre>


Development utility: unittest
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Runs classes that extend the unittest.TestCase class. An alias for 
<tt>xp net.xp_framework.unittest.runner.cli.CliRunner</tt>.
<pre>
  $ unittest [class-or-config*]

  class-or-config is one of:
  * class.which.extends.unittest.TestCase - a fully qualified class name
  * class/which/extends/unittest/TestCase.class.php - a filename
  * unittests/config.ini - a property file
</pre>


Development utility: doclet
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Runs doclets.
<pre>
  $ doclet class.which.extends.text.doclet.Doclet
</pre>


Development utility: qnt
~~~~~~~~~~~~~~~~~~~~~~~~
Runs Quantum buildfiles (<tt>build.cxml</tt>).
<pre>
  $ qnt [target]
</pre>


Development utility: cgen
~~~~~~~~~~~~~~~~~~~~~~~~~
Code generator utility.
<pre>
  # Generate parsers
  $ cgen [options] Parser <grammar> <skeleton-name> <parser-name>
  
  # Generate remote stubs via ESDL
  $ cgen [options] Stubs [dsn]
  
  # Generate datasets
  $ cgen [options] DataSets [dsn]
  
  options is one of:
  * -o dir/: Generate class files to directory dir/ (default: ./)
</pre>


Development utility: xcc
~~~~~~~~~~~~~~~~~~~~~~~~
Compiles XP sourcecode to bytecode.
<pre>
  $ xcc any/source/File.xp
</pre>


Development utility: opcodes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Dumps opcode instructions from compiled bytecode.
<pre>
  $ opcodes any/source/File.xpc
</pre>


Security considerations
-----------------------
None.


Speed impact
------------
None.


Dependencies
------------
None.


Related documents
-----------------
None.


Comments
--------
friebe, Mon May 12 17:14:05     2008
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
I would like to move net.xp_framework.unittest.runner.cli.CliRunner
and net.xp_framework.xar.Xar to skeleton/ somewhere to get rid of
the dependency on xp-net.xp_framework-X.X.X.xar

friebe, Mon May 12 17:47:12     2008
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The utilities opcodes and xcc only apply to the compiled version of 
XP, see RFC #0052.

friebe, Mon May 12 17:52:04     2008
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The utilities cgen and doclet are new! 

friebe, Mon May 12 17:53:43     2008
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The utility "qnt" is currently under development in the XP framework's
experiments.

<EOF>
