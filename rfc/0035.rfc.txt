RFC 0035: Interceptors for FTP storage
========================================================================
$Id$

@authors: friebe, gelli, olli
@created: Wed Aug 24 12:40:35 CEST 2005
@status: draft
@category: peer.ftp.server

Scope of Change
---------------
An API will be added to the peer.ftp.server package to allow attaching
interceptors that can "veto" FTP commands.

Rationale
---------
Example: Prohibit deletion of a file that is referenced elsewhere.

Functionality
-------------
An interceptor can throw an exception to indicate that processing with
this command is not acceptable.

Interceptable actions
~~~~~~~~~~~~~~~~~~~~~
- Creating an entry (collection or element)
- Reading an element
- Modifying an element
- Renaming an entry (collection or element)
- Deleting an entry (collection or element)
- Changing an entry (collection or element)'s permissions
- Changing a directory

Example (abbreviated):
<?php
  class DeleteInterceptor extends DefaultInterceptor {
    
    function onDelete(&$entry) {
      if ($this->conn->query('...')) return throw(new IllegalStateException('...'));

      return TRUE;
    }
  }
  
  // Add a global interceptor (applies to entire storage)
  $storage->addInterceptor(new DeleteInterceptor());
  
  // Add an interceptor for the base "/check/only/in/this/path", idea #1
  $storage->addInterceptorFor('/check/only/in/this/path', new DeleteInterceptor());
  
  // Add an interceptor for the base "/check/only/in/this/path", idea #2
  $storage->addInterceptorFor(
    new PathCondition('/check/only/in/this/path'),
    new DeleteInterceptor()
  );
  
  // Add an interceptor for the base "/check/only/in/this/path", idea #3
  // In this example, we'd only check between 3 AM and 4 AM (maybe because
  // we have an extensive indexer search or backup running)
  $storage->addInterceptorFor(
    array(new PathCondition('/check/only/in/this/path'), new TimeCondition('03:00', '04:00')),
    new DeleteInterceptor()
  );
?>

Note: The DefaultInterceptor class implements the 

  peer.ftp.server.intercept.StorageActionInterceptor 
  
interface and returns TRUE to all methods so that subclasses need not redefine
them if they desire no actions.

Security considerations
-----------------------
n/a

Speed impact
------------
Makes FTP server a bit slower, but only when interceptors are added.

Dependencies
------------
n/a

Related documents
-----------------
n/a

Comments
--------
- friebe, Wed Aug 24 13:33:30 CEST 2005
  Maybe addConditionalInterceptor() is a better name for addInterceptorFor()?

<EOF>
