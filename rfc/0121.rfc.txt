RFC 0121: Class loading revamp
========================================================================
$Id$

@authors: friebe, kiesel
@created: Fri Apr 13 17:40:09     2007
@status: discussion, ends Mon May  7 17:44:44     2007
@category: lang

Scope of Change
---------------
- There will be one ClassLoader for each element in the include path.
- Every class will have a classloader associated with it.
- The deprecated overloaded variant of ClassLoader::defineClass() will 
  be removed.
- uses() wrappers will be removed.


Rationale
---------
- Consistent API
- Makes RFC #0037 possible (fully qualified class names)
- Makes RFC #0117 possible (package reflection)


Functionality
-------------

Overview
~~~~~~~~
Consider the following include_path (wrapped for better readability)
<pre>
  .;
  C:\cygwin\home\thekid\devel\xp\trunk\skeleton;
  C:\cygwin\home\thekid\lib\xp-com.a9-5.4.1.xar
</pre>

This will now create three different classloader instances:
* FileSystemClassLoader (.)
* FileSystemClassLoader (C:\cygwin\home\thekid\devel\xp\trunk\skeleton)
* ArchiveClassLoader (C:\cygwin\home\thekid\lib\xp-com.a9-5.4.1.xar)

The default classloader, which can be retrieved by invoking
<?php
  $cl= ClassLoader::getDefault();
?>
can be asked for a class by using its loadClass() method. This method
will ask all registered classloaders (see list from above) for the class
and will load it from the first class loader whose providesClass() method
returns TRUE.


Security considerations
-----------------------
n/a


Speed impact
------------
A bit faster, slightly increased memory usage.


Dependencies
------------
Note:
<pre>
This will bump the minor version number (-> 5.5.0)
</pre>

- uses() wrappers deprecation
- defineClass() old api deprecation


Related documents
-----------------
- http://experiments.xp-framework.net/?arena,classloaders
  The new classloading API

- http://xp-framework.info/xml/xp.en_US/news/view?174
  XP Blog: "Different XP framework classloading implementations compared"


Comments
--------

<EOF>
