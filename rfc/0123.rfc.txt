RFC 0123: Use aggregation/projection with criteria
========================================================================
$Id$

@authors: wagner
@created: Wed Apr 25 17:11:22 CET 2007
@status: implemented, mon jun 11 10:25:35 CET 2007
@category: rdbms

Scope of Change
---------------
- Extend the criteria api to aggregate or cut down the
  querie's resultset.
- After a projection, the resultset does not fit to
  the dataSet's types anymore, the rdbms.Record will be
  implemented
  
This is not rfc0051.


Rationale
---------
- counting, summing up, etc. - using aggregation
  functions that are provided by SQL
- cutting down the resultset, as one do not need the
  whole table resut
- to give a table column as Parameter to the projection,
  the rdbms.Column class was implemented
  All DataSets are extendet to have a column factory
- Criteria::setProjection, Criteria::withProjection and ProjectionList::add can also
  handle rdbms.SQLFragment (leke function or column) as parameter, a Property Projection
  is assuemed then


Functionality
-------------
<pre>
  To use projections the package rdbms.criterion.Projections has to be imported.
</pre>


Column class
~~~~~~~~~~~~
to get an instance of a column:
<code>
  $nameColumn= Person::column('name');
  $idColumn=   Person::column('person_id');
</code>


Aggregation
~~~~~~~~~~~
projection to the function avg
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::average($idColumn))
  );
</code>

projection to the function max
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::max($idColumn))
  );
</code>

projection to the function min
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::min($idColumn))
  );
</code>

projection to the function sum
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::sum($idColumn))
  );
</code>

projection to the function count
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::count())
  );
</code>


Projection
~~~~~~~~~~~
projection to the property name
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::property($nameColumn))
  );
</code>
is th same as:
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection($nameColumn)
  );
</code>

projection to a set of properties
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(
      Projections::projectionList()
      ->add(Projections::property($idColumn))
      ->add(Projections::property($nameColumn))
    )
  );
</code>
is th same as:
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(
      Projections::projectionList()
      ->add($idColumn)
      ->add($nameColumn)
    )
  );
</code>

projection to the property name with the alias surname
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection(Projections::property($nameColumn), "surname")
  );
</code>
is th same as:
<code>
  Person::getPeer()->doSelect(Criteria::newInstance()
    ->setProjection($nameColumn, "surname")
  );
</code>



temporary use
~~~~~~~~~~~~~
the method Criteria::withProjection can be used to build a temporary
Criteria with a projection - e.g. count to test how many results will be
in the resultset

<code>
  $crit= Criteria::newInstance()->add(Restrictions::equal("name", "Mary"));
  $amountOfMarys= Person::getPeer()->iteratorFor(
    $crit->withProjection(Projections::count())
  )->next()->get('count');
  if (LIMIT >= $amountOfMarys) Person::getPeer()->doSelect($crit);
</code>


Security considerations
-----------------------
n/a


Speed impact
------------
May be slows the criteria rendering process


Dependencies
------------
- RFC 0126
  http://xp-framework.net/rfc/0126.rfc.html
- method isProjection() was added to the interface rdbms.SQLExpression 


Related documents
-----------------
- xp-lab
  http://experiments.xp-framework.net/?people,wagner,rfc,0123
  http://experiments.xp-framework.net/?people,wagner,rfc,0126
- Joint patch for RFC0096, RFC0123, RFC0124 and RFC0129 against skeleton
  http://xp-framework.net/rfc/contrib/rfc0096_0123_0124_0129/skeleton.diff
- Joint patch for RFC0096, RFC0123, RFC0124 and RFC0129 against ports
  http://xp-framework.net/rfc/contrib/rfc0096_0123_0124_0129/ports.diff


Comments
--------

<EOF>
