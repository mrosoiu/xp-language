RFC 0065: Server Protocol API
========================================================================
$Id$

@authors: friebe, gelli, kiesel
@created: Wed Jul  5 17:28:01 CEST 2006
@status: draft
@category: peer.server

Scope of Change
---------------
A server will have a protocol implementation which will take care of
reading and writing data from and to the accept()'ed sockets.


Rationale
---------
Flexibility.


Functionality
-------------

Setting the protocol implementation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
<?php
  with ($server= &new Server($argv[1], 6448)); {
    $server->setProtocol(new EascProtocol());
    $server->init();
    $server->service();
    $server->shutdown();
  }
?>


Security considerations
-----------------------
n/a


Speed impact
------------
n/a


Dependencies
------------
- New Protocol interface.
- Some BC protocol implementation


Related documents
-----------------
n/a


Comments
--------
- friebe, Fri Jul  7 11:26:16 CEST 2006
  Not sure about the name of this reader. SocketReader seems a bit too
  generic. ServerDataReader? And with dataFrom() or readDataFrom() 
  instead of readData()?

- gelli, Fri Jul  7 11:58:40 CEST 2006
  As of the current state, which is that this new api will always read from
  sockets, i think SocketReader as interface name is not too generic but 
  ServerDataReader is. Addressing the methods name i'd prefer readFrom($socket)
  as it's literally a little bit more "readable"

- friebe, Sun Jul  9 10:11:24     2006
  More thoughts on naming:
  * Reads data from client => ClientDataReader::readFrom($sock)  
  * Extracts data from socket => DataExtractor::dataFrom($sock)
  * Interprets data from socket => DataInterpreter::dataFrom($sock)
  * Implements reading => (Server)(Data)Read(ing|er)Implementation::readFrom($sock)

- kiesel, Wed Jul 12 11:42:10 CEST 2006
  To fully implement a client/server protocol, we also need a writer,
  so this proposal is only half of the "work".

- friebe, Thu Jul 13 17:02:47 CEST 2006
  Revamped this completely!

<EOF>
